{
  "version": 3,
  "sources": [
    "components/DownLoadButton.js",
    "resources/bill.js",
    "resources/company.js",
    "resources/CompanyQuickCreateButton.js",
    "resources/CompanyReferenceInput.js",
    "resources/BillCreate.js",
    "components/App.js",
    "serviceWorker.js",
    "index.js",
    "ra-data-json-hal/lib/constants.js",
    "ra-data-json-hal/lib/index.js",
    "ra-data-json-hal/lib/fetch.js"
  ],
  "names": [
    "DownLoadButton",
    "handleClick",
    "_this$props",
    "_this",
    "props",
    "push",
    "record",
    "showNotification",
    "fetch",
    "concat",
    "id",
    "then",
    "res",
    "blob",
    "a",
    "document",
    "createElement",
    "url",
    "window",
    "URL",
    "createObjectURL",
    "href",
    "download",
    "click",
    "revokeObjectURL",
    "catch",
    "e",
    "react_default",
    "Button_default",
    "color",
    "onClick",
    "this",
    "ArrowDownward_default",
    "Component",
    "connect",
    "ColoredNumberField",
    "withStyles",
    "first",
    "second",
    "_ref",
    "_classnames",
    "classes",
    "Object",
    "objectWithoutProperties",
    "NumberField",
    "assign",
    "className",
    "classnames",
    "defineProperty",
    "source",
    "defaultProps",
    "BillList",
    "List",
    "Datagrid",
    "rowClick",
    "TextField",
    "DateField",
    "ReferenceField",
    "reference",
    "linkType",
    "components_DownLoadButton",
    "BillEdit",
    "Edit",
    "SimpleForm",
    "DisabledInput",
    "DateInput",
    "TextInput",
    "NumberInput",
    "CompanyList",
    "CompanyEdit",
    "CompanyCreate",
    "Create",
    "CompanyQuickCreateButton",
    "state",
    "error",
    "showDialog",
    "setState",
    "handleCloseClick",
    "handleSaveClick",
    "submit",
    "handleSubmit",
    "values",
    "change",
    "crudGetMatching",
    "fetchStart",
    "fetchEnd",
    "options",
    "method",
    "body",
    "JSON",
    "stringify",
    "headers",
    "content-type",
    "json",
    "page",
    "perPage",
    "field",
    "order",
    "REDUX_FORM_NAME",
    "message",
    "finally",
    "isSubmitting",
    "react",
    "button_Button",
    "Add_default",
    "Dialog_default",
    "fullWidth",
    "open",
    "onClose",
    "aria-label",
    "DialogTitle_default",
    "DialogContent_default",
    "form",
    "resource",
    "onSubmit",
    "toolbar",
    "DialogActions_default",
    "SaveButton",
    "saving",
    "label",
    "Cancel_default",
    "mapDispatchToProps",
    "CompanyReferenceInput",
    "ReferenceInput",
    "SelectInput",
    "optionText",
    "resources_CompanyQuickCreateButton",
    "BillCreate",
    "resources_CompanyReferenceInput",
    "validate",
    "required",
    "messages",
    "cn",
    "chineseMessages",
    "i18nProvider",
    "locale",
    "App",
    "Admin",
    "dataProvider",
    "jsonHalRestProvider",
    "Resource",
    "name",
    "list",
    "edit",
    "create",
    "Boolean",
    "location",
    "hostname",
    "match",
    "ReactDOM",
    "render",
    "components_App",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister",
    "exports",
    "value",
    "EMBEDDED_KEY",
    "PAGINATION_KEY",
    "LOCATION_HEADER",
    "LINKS_KEY",
    "_extends",
    "target",
    "i",
    "arguments",
    "length",
    "key",
    "prototype",
    "hasOwnProperty",
    "call",
    "generateHttpClient",
    "_fetch",
    "require",
    "_reactAdmin",
    "_constants",
    "getQueryParamsFromReactAdminParams",
    "params",
    "undefined",
    "keys",
    "obj",
    "_params$pagination",
    "pagination",
    "size",
    "_params$sort",
    "sort",
    "filter",
    "requestParameters",
    "enumerable",
    "configurable",
    "writable",
    "queryParameters",
    "requestMany",
    "apiUrl",
    "httpClient",
    "responseTransformer",
    "Promise",
    "all",
    "ids",
    "map",
    "getMany",
    "_params$ids",
    "otherParams",
    "indexOf",
    "_objectWithoutProperties",
    "Array",
    "isArray",
    "responses",
    "data",
    "extractIDFromResourceSelfLink",
    "self",
    "reject",
    "default",
    "fetchJson",
    "type",
    "GET_MANY",
    "UPDATE_MANY",
    "response",
    "get",
    "updateMany",
    "DELETE_MANY",
    "deleteMany",
    "_convertHttpDataProvi",
    "baseRequestUrl",
    "GET_LIST",
    "GET_ONE",
    "CREATE",
    "console",
    "log",
    "UPDATE",
    "DELETE",
    "GET_MANY_REFERENCE",
    "Error",
    "convertHttpDataProviderRequestToHttpRequest",
    "object",
    "total",
    "target_reference_list",
    "converHttpResponseToDataProvider",
    "Buffer",
    "flattenObject",
    "_HttpError",
    "_HttpError2",
    "__esModule",
    "_queryString",
    "_defineProperty",
    "selfLink",
    "setSelfHrefAsID",
    "requestHeaders",
    "Headers",
    "Accept",
    "has",
    "FormData",
    "set",
    "user",
    "token",
    "includes",
    "status",
    "statusText",
    "text",
    "resources",
    "parse",
    "handlingResponse",
    "path",
    "isBuffer",
    "isObject",
    "toString",
    "hasKeys",
    "isValidObject",
    "apply",
    "arr",
    "arr2",
    "from",
    "_toConsumableArray",
    "join"
  ],
  "mappings": "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",
  "file": "static/js/main.36f6a502.chunk.js",
  "sourcesContent": [
    "import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport QueueIcon from '@material-ui/icons/ArrowDownward';\r\nimport { showNotification } from 'react-admin';\r\nimport { push } from 'react-router-redux';\r\n\r\nclass DownLoadButton extends Component {\r\n    handleClick = () => {\r\n      const { push, record, showNotification } = this.props;\r\n        fetch(`http://localhost:8080/bill/${record.id}/download.xls`)\r\n          .then(res => res.blob().then(blob => {\r\n            let filename=`download.xls`\r\n            let a = document.createElement('a');\r\n            let url = window.URL.createObjectURL(blob);\r\n            a.href = url;\r\n            a.download = filename;\r\n            a.click();\r\n            window.URL.revokeObjectURL(url);\r\n            showNotification('成功：下载任务');\r\n            push('/bill');\r\n          }))\r\n            .catch((e) => {\r\n                showNotification('错误: 下载遇到问题', 'error')\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <Button color=\"primary\" onClick={this.handleClick}><QueueIcon/></Button>;\r\n    }\r\n}\r\n\r\nDownLoadButton.propTypes = {\r\n    push: PropTypes.func,\r\n    record: PropTypes.object,\r\n    showNotification: PropTypes.func,\r\n};\r\n\r\nexport default connect(null, {\r\n    showNotification,\r\n    push,\r\n})(DownLoadButton);",
    "import React from 'react';\r\nimport { Create, Datagrid, DateField, DateInput, DisabledInput, Edit, List, NumberField, NumberInput, ReferenceField, ReferenceInput, SelectInput, SimpleForm, TextField, TextInput } from 'react-admin';\r\nimport DownLoadButton from \"../components/DownLoadButton\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classnames from 'classnames';\r\n\r\nconst coloredStyles = {\r\n    first: { color: 'green' },\r\n    second: { color: 'red' },\r\n};\r\n\r\nconst ColoredNumberField = withStyles(coloredStyles)(\r\n    ({ classes, ...props }) => (\r\n        <NumberField\r\n            className={classnames({\r\n                [classes.first]: props.record[props.source] < 1000000,\r\n                [classes.second]: props.record[props.source] >= 1000000,\r\n            })}\r\n            {...props}\r\n        />\r\n    ));\r\nColoredNumberField.defaultProps = NumberField.defaultProps;\r\nexport const BillList = props => (\r\n  <List {...props}>\r\n      <Datagrid rowClick=\"edit\">\r\n          <TextField source=\"id\" />\r\n          <DateField source=\"signdate\" />\r\n          <TextField source=\"material\" />\r\n          <TextField source=\"size\" />\r\n          <TextField source=\"unit\" />\r\n          <NumberField source=\"num\" />\r\n          <NumberField source=\"price\" />\r\n          <ColoredNumberField source=\"total\" />\r\n          <ReferenceField source=\"pid\" reference=\"company\" linkType=\"show\">\r\n              <TextField source=\"name\" />\r\n          </ReferenceField>\r\n          <ReferenceField source=\"bid\" reference=\"company\" linkType=\"show\">\r\n              <TextField source=\"name\" />\r\n          </ReferenceField>\r\n          <DownLoadButton />\r\n      </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const BillEdit = props => (\r\n  <Edit {...props}>\r\n      <SimpleForm>\r\n          <DisabledInput source=\"id\" />\r\n          <DateInput source=\"signdate\" />\r\n          <TextInput source=\"material\" />\r\n          <TextInput source=\"size\" />\r\n          <TextInput source=\"unit\" />\r\n          <NumberInput source=\"num\" />\r\n          <NumberInput source=\"price\" />\r\n          <NumberInput source=\"total\" />\r\n      </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const BillCreate = props => (\r\n  <Create {...props}>\r\n      <SimpleForm>\r\n          <DateInput source=\"signdate\" />\r\n          <TextInput source=\"material\" />\r\n          <TextInput source=\"size\" />\r\n          <TextInput source=\"unit\" />\r\n          <NumberInput source=\"num\" />\r\n          <NumberInput source=\"price\" />\r\n          <NumberInput source=\"total\" />\r\n          <ReferenceInput source=\"pid\" reference=\"company\">\r\n            <SelectInput optionText=\"name\" />\r\n          </ReferenceInput>\r\n          <ReferenceInput source=\"bid\" reference=\"company\">\r\n            <SelectInput optionText=\"name\" />\r\n          </ReferenceInput>\r\n      </SimpleForm>\r\n  </Create>\r\n);\r\n",
    "import React from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  DisabledInput,\r\n  Edit,\r\n  List,\r\n  SimpleForm,\r\n  TextField,\r\n  TextInput\r\n} from \"react-admin\";\r\n\r\nexport const CompanyList = props => (\r\n  <List {...props}>\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"name\" />\r\n      <TextField source=\"address\" />\r\n      <TextField source=\"tel\" />\r\n      <TextField source=\"bank\" />\r\n      <TextField source=\"account\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const CompanyEdit = props => (\r\n  <Edit {...props}>\r\n    <SimpleForm>\r\n      <DisabledInput source=\"id\" />\r\n      <TextInput source=\"name\" />\r\n      <TextInput source=\"address\" />\r\n      <TextInput source=\"bank\" />\r\n      <TextInput source=\"tel\" />\r\n      <TextInput source=\"account\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const CompanyCreate = props => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"id\" />\r\n      <TextInput source=\"name\" />\r\n      <TextInput source=\"address\" />\r\n      <TextInput source=\"bank\" />\r\n      <TextInput source=\"tel\" />\r\n      <TextInput source=\"account\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n",
    "import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, submit, isSubmitting } from \"redux-form\";\nimport {\n  fetchEnd,\n  fetchStart,\n  showNotification,\n  crudGetMatching,\n  Button,\n  SaveButton,\n  SimpleForm,\n  TextInput,\n  REDUX_FORM_NAME\n} from \"react-admin\";\nimport IconContentAdd from \"@material-ui/icons/Add\";\nimport IconCancel from \"@material-ui/icons/Cancel\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nclass CompanyQuickCreateButton extends Component {\n  state = {\n    error: false,\n    showDialog: false\n  };\n\n  handleClick = () => {\n    this.setState({ showDialog: true });\n  };\n\n  handleCloseClick = () => {\n    this.setState({ showDialog: false });\n  };\n\n  handleSaveClick = () => {\n    const { submit } = this.props;\n\n    // Trigger a submit of our custom quick create form\n    // This is needed because our modal action buttons are oustide the form\n    submit(\"company-quick-create\");\n  };\n\n  handleSubmit = values => {\n    const {\n      change,\n      crudGetMatching,\n      fetchStart,\n      fetchEnd,\n      showNotification\n    } = this.props;\n\n    // Dispatch an action letting react-admin know a API call is ongoing\n    fetchStart();\n\n    // As we want to know when the new post has been created in order to close the modal, we use the\n    // dataProvider directly\n    const options = {\n      method: 'post',\n      body: JSON.stringify(values),\n      headers: {\n        'content-type': 'application/json'\n      },\n    };\n    fetch('http://localhost:8080/company', options)\n      .then(res => {\n        return res.json();\n      })\n      .then(json => {\n        // Refresh the choices of the ReferenceInput to ensure our newly created post\n        // always appear, even after selecting another post\n        crudGetMatching(\n          \"company\",\n          \"bill@pid\",\n          { page: 1, perPage: 25 },\n          { field: \"id\", order: \"DESC\" },\n          {}\n        );\n        crudGetMatching(\n          \"company\",\n          \"bill@bid\",\n          { page: 1, perPage: 25 },\n          { field: \"id\", order: \"DESC\" },\n          {}\n        );\n        // Update the main react-admin form (in this case, the comments creation form)\n        change(REDUX_FORM_NAME, \"pid\", json.id);\n        change(REDUX_FORM_NAME, \"bid\", json.id);\n        this.setState({ showDialog: false });\n        showNotification('添加成功');\n      })\n      .catch(error => {\n        showNotification(error.message, \"error\");\n      })\n      .finally(() => {\n        // Dispatch an action letting react-admin know a API call has ended\n        fetchEnd();\n      });\n  };\n\n  render() {\n    const { showDialog } = this.state;\n    const { isSubmitting } = this.props;\n\n    return (\n      <Fragment>\n        <Button onClick={this.handleClick}>\n          <IconContentAdd />\n        </Button>\n        <Dialog\n          fullWidth\n          open={showDialog}\n          onClose={this.handleCloseClick}\n          aria-label=\"新建公司\"\n        >\n          <DialogTitle>新建公司</DialogTitle>\n          <DialogContent>\n            <SimpleForm\n              // We override the redux-form name to avoid collision with the react-admin main form\n              form=\"company-quick-create\"\n              resource=\"company\"\n              // We override the redux-form onSubmit prop to handle the submission ourselves\n              onSubmit={this.handleSubmit}\n              // We want no toolbar at all as we have our modal actions\n              toolbar={null}\n            >\n              <TextInput source=\"id\" />\n              <TextInput source=\"name\" />\n              <TextInput source=\"address\" />\n              <TextInput source=\"bank\" />\n              <TextInput source=\"tel\" />\n              <TextInput source=\"account\" />\n            </SimpleForm>\n          </DialogContent>\n          <DialogActions>\n            <SaveButton saving={isSubmitting} onClick={this.handleSaveClick} />\n            <Button label=\"ra.action.cancel\" onClick={this.handleCloseClick}>\n              <IconCancel />\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isSubmitting: isSubmitting(\"company-quick-create\")(state)\n});\n\nconst mapDispatchToProps = {\n  change,\n  crudGetMatching,\n  fetchEnd,\n  fetchStart,\n  showNotification,\n  submit\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompanyQuickCreateButton);\n",
    "import React, { Fragment } from \"react\";\nimport { ReferenceInput, SelectInput } from \"react-admin\";\n\nimport CompanyQuickCreateButton from \"./CompanyQuickCreateButton\";\n\nconst CompanyReferenceInput = props => (\n  <Fragment>\n    <ReferenceInput {...props}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>\n\n    <CompanyQuickCreateButton />\n  </Fragment>\n);\n\nexport default CompanyReferenceInput;\n",
    "import React from \"react\";\nimport {\n  Create,\n  DateInput,\n  SimpleForm,\n  required,\n  TextInput,\n  NumberInput\n} from \"react-admin\";\nimport CompanyReferenceInput from \"./CompanyReferenceInput\";\n\nconst BillCreate = props => {\n  return (\n    <Create {...props}>\n      <SimpleForm>\n        <DateInput source=\"signdate\" />\n        <TextInput source=\"material\" />\n        <TextInput source=\"size\" />\n        <TextInput source=\"unit\" />\n        <NumberInput source=\"num\" />\n        <NumberInput source=\"price\" />\n        <NumberInput source=\"total\" />\n        <CompanyReferenceInput\n          source=\"pid\"\n          reference=\"company\"\n          validate={required()}\n        />\n        <CompanyReferenceInput\n          source=\"bid\"\n          reference=\"company\"\n          validate={required()}\n        />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport default BillCreate;\n",
    "import jsonHalRestProvider from '../ra-data-json-hal';\nimport React from 'react';\nimport { Admin, Resource } from 'react-admin';\nimport { BillEdit, BillList } from '../resources/bill';\nimport { CompanyCreate, CompanyEdit, CompanyList } from '../resources/company';\nimport chineseMessages from 'ra-language-chinese';\nimport BillCreate from '../resources/BillCreate';\n\nconst messages = {\n    'cn': chineseMessages\n};\nconst i18nProvider = locale => messages[locale];\nconst App = () =>\n    <Admin locale=\"cn\" i18nProvider={i18nProvider} dataProvider={jsonHalRestProvider('http://10.10.5.171:8081')}>\n        <Resource name=\"bill\" list={BillList} edit={BillEdit} create={BillCreate} />\n        <Resource name=\"company\" list={CompanyList} edit={CompanyEdit} create={CompanyCreate} />\n    </Admin>\nexport default App;",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",
    "/* eslint-disable */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EMBEDDED_KEY = exports.EMBEDDED_KEY = \"_embedded\";\nvar PAGINATION_KEY = exports.PAGINATION_KEY = \"page\";\nvar LOCATION_HEADER = exports.LOCATION_HEADER = \"Location\";\nvar LINKS_KEY = exports.LINKS_KEY = \"_links\";",
    "/* eslint-disable no-unused-vars */\n/* eslint-disable strict */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends =\n  Object.assign ||\n  function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n\nexports.generateHttpClient = generateHttpClient;\n\nvar _fetch = require(\"./fetch\");\n\nvar _reactAdmin = require(\"react-admin\");\n\nvar _constants = require(\"./constants\");\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction len(object) {\n  return Array.isArray(object) ? object.length : 0;\n}\n\n/**\n * @param {object} params\n * @returns {string}\n */\nfunction getQueryParamsFromReactAdminParams() {\n  var params =\n    arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (!params || Object.keys(params).length === 0) {\n    return \"\";\n  }\n  var _params$pagination = params.pagination;\n  _params$pagination =\n    _params$pagination === undefined ? {} : _params$pagination;\n  var page = _params$pagination.page,\n    size = _params$pagination.perPage,\n    _params$sort = params.sort;\n  _params$sort = _params$sort === undefined ? {} : _params$sort;\n  var sort = _params$sort.field,\n    order = _params$sort.order,\n    filter = params.filter;\n  // fixed\n  var requestParameters = _extends(\n    _defineProperty(\n      {\n        /**\n         * The API starts pagination at 0.\n         */\n        page: page ? page - 1 : undefined,\n        size: size,\n        sort: `${sort},${order}`\n      },\n      // sort + \".dir\",\n      // order\n    ),\n    filter\n  );\n  return \"?\" + (0, _fetch.queryParameters)(requestParameters);\n}\n\n/**\n * react-admin uses a different structure for each \"type\" of request.\n *\n * The GET_LIST type uses the following structure:\n *\n *    {\n *      sort: {\n *        field: string,\n *        order: string // oneOf 'ASC' or 'DESC'\n *      },\n *      pagination: {\n *        page: number,\n *        perPage: number,\n *      },\n *      filter: {}, // keys to realize extra \"filters\"\n *     }\n *\n * The HAL+JSON request for GET_LIST accepts the following query parameters:\n * page, size, sort, {sort_value}.dir. The \"{sortValue}.dir\" should have one of\n * the following values: 'asc' or 'desc'.\n *\n *\n * @param {string} apiUrl The base URL for the API.\n * @param {object} httpClient The client used for the request, usually an instance of fetch.\n * @param {object} type The type of request to fetch eg. \"GET_ONE\"\n * @param {string} resource The name of the resource to fetch eg. \"deals\"\n * @param {object} params The parameters for the request.\n * @returns {object} The http request object.\n */\nfunction convertHttpDataProviderRequestToHttpRequest(\n  apiUrl,\n  httpClient,\n  type,\n  resource,\n  params\n) {\n  var baseRequestUrl = apiUrl + \"/\" + resource;\n  switch (type) {\n    case _reactAdmin.GET_LIST:\n      return {\n        url: \"\" + baseRequestUrl + getQueryParamsFromReactAdminParams(params),\n        options: {}\n      };\n    case _reactAdmin.GET_ONE:\n      return { url: baseRequestUrl + \"/\" + params.id, options: {} };\n    case _reactAdmin.CREATE:\n      console.log(params)\n      return {\n        url: \"\" + baseRequestUrl,\n        options: {\n          method: \"POST\",\n          body: JSON.stringify(params.data)\n        }\n      };\n    case _reactAdmin.UPDATE:\n      return {\n        url: baseRequestUrl + \"/\" + params.id,\n        options: {\n          method: \"PUT\",\n          body: JSON.stringify(params.data)\n        }\n      };\n    case _reactAdmin.DELETE:\n      return {\n        url: baseRequestUrl + \"/\" + params.id,\n        options: {\n          method: \"DELETE\"\n        }\n      };\n    case _reactAdmin.GET_MANY_REFERENCE:\n      return {\n        url:\n          apiUrl +\n          \"/\" +\n          params.target +\n          \"/\" +\n          params.id +\n          \"/\" +\n          resource +\n          getQueryParamsFromReactAdminParams(params)\n      };\n    default:\n      throw new Error(\"Not Implemented\");\n  }\n}\n\nfunction converHttpResponseToDataProvider(response, type, resource, params) {\n  var json = response.json,\n    headers = response.headers;\n\n  switch (type) {\n    case _reactAdmin.GET_LIST:\n      return {\n        data: json[_constants.EMBEDDED_KEY][resource],\n        total: json[_constants.PAGINATION_KEY][\"totalElements\"]\n      };\n    case _reactAdmin.GET_MANY_REFERENCE:\n      var target_reference_list = json[_constants.EMBEDDED_KEY][resource];\n      return {\n        data: target_reference_list,\n        total: len(target_reference_list)\n      };\n    case _reactAdmin.GET_ONE:\n      return { data: json };\n    case _reactAdmin.UPDATE:\n      return { data: _extends({ id: params.id }, params.data) };\n    // fixed create\n    case _reactAdmin.CREATE:\n      console(response);\n      return {\n        data: _extends({}, json, {\n          id: (0, _fetch.extractIDFromResourceSelfLink)(\n            json[_constants.LINKS_KEY].self.href\n          )\n        })\n      };\n    case _reactAdmin.DELETE:\n      return { data: { id: params.id } };\n    default:\n      throw new Error(\"Not Implemented\");\n  }\n}\n\nfunction requestMany(apiUrl, httpClient, resource, params) {\n  var options =\n    arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var responseTransformer = arguments[5];\n\n  return Promise.all(\n    params.ids.map(function(id) {\n      return httpClient(apiUrl + \"/\" + resource + \"/\" + id, options);\n    })\n  ).then(responseTransformer);\n}\n\n/**\n * Request n entities by their ids.\n *\n * @param {string} apiUrl\n * @param {object} httpClient\n * @param {string} resource\n * @param {object} params\n * @param {string[]} params.ids Assumes that instead of ids, we receive links.\n * @return {promise}\n */\nfunction getMany(apiUrl, httpClient, resource, params) {\n  var _params$ids = params.ids,\n    ids = _params$ids === undefined ? [] : _params$ids,\n    otherParams = _objectWithoutProperties(params, [\"ids\"]);\n\n  if (Array.isArray(params.ids)) {\n    return Promise.all(\n      ids.map(function(id) {\n        // fixed\n        return httpClient(\n          apiUrl +\n            \"/\" +\n            resource +\n            \"/\" +\n            id +\n            getQueryParamsFromReactAdminParams(otherParams)\n        );\n      })\n    ).then(function(responses) {\n      return {\n        data: responses.map(function(_ref) {\n          var json = _ref.json;\n          return _extends({}, json, {\n            id: (0, _fetch.extractIDFromResourceSelfLink)(\n              json[_constants.LINKS_KEY].self.href\n            )\n          });\n        })\n      };\n    });\n  }\n  return Promise.reject(\"Unable to process request.\");\n}\n\n/**\n * Request the PATCH for n entities.\n *\n * @param {string} apiUrl\n * @param {object} httpClient\n * @param {string} resource\n * @param {object} params\n * @return {promise}\n */\nfunction updateMany(apiUrl, httpClient, resource, params) {\n  return requestMany(\n    apiUrl,\n    httpClient,\n    resource,\n    params,\n    {\n      method: \"PUT\",\n      body: params.data\n    },\n    function(responses) {\n      return {\n        data: responses.map(function(response) {\n          return _extends(\n            {\n              id: (0, _fetch.extractIDFromResourceSelfLink)(\n                response.headers.get(_constants.LOCATION_HEADER)\n              )\n            },\n            params.data\n          );\n        })\n      };\n    }\n  );\n}\n\n/**\n * Request the DELETE for n entities.\n *\n * @param {string} apiUrl\n * @param {object} httpClient\n * @param {string} resource\n * @param {object} params\n * @return {promise}\n */\nfunction deleteMany(apiUrl, httpClient, resource, params) {\n  return requestMany(\n    apiUrl,\n    httpClient,\n    resource,\n    params,\n    {\n      method: \"DELETE\"\n    },\n    function(responses) {\n      return {\n        data: responses.map(function(response) {\n          return {\n            id: (0, _fetch.extractIDFromResourceSelfLink)(\n              response.headers.get(_constants.LOCATION_HEADER)\n            )\n          };\n        })\n      };\n    }\n  );\n}\n\n/**\n * @param {string} apiUrl The root url of the API.\n * @param {object} httpClient\n * @return {promise}\n */\n\nexports.default = function(apiUrl) {\n  var httpClient =\n    arguments.length > 1 && arguments[1] !== undefined\n      ? arguments[1]\n      : _fetch.fetchJson;\n  /**\n   * @example\n   * jsonHalDataProvider(GET_ONE, \"countries\", { code: 'SV' })\n   *\n   * @param {string} type The react-admin request type, eg. GET_LIST\n   * @param {string} resource The name of the resource to fetch, eg. \"countries\"\n   * @param {string} params The params for the request\n   * @returns {Promise}\n   */\n  return function(type, resource, params) {\n    if (type === _reactAdmin.GET_MANY) {\n      return getMany(apiUrl, httpClient, resource, params);\n    }\n    if (type === _reactAdmin.UPDATE_MANY) {\n      return updateMany(apiUrl, httpClient, resource, params);\n    }\n    if (type === _reactAdmin.DELETE_MANY) {\n      return deleteMany(apiUrl, httpClient, resource, params);\n    }\n\n    var _convertHttpDataProvi = convertHttpDataProviderRequestToHttpRequest(\n        apiUrl,\n        httpClient,\n        type,\n        resource,\n        params\n      ),\n      url = _convertHttpDataProvi.url,\n      options = _convertHttpDataProvi.options;\n\n    return httpClient(url, options, resource, type).then(function(response) {\n      return converHttpResponseToDataProvider(response, type, resource, params);\n    });\n  };\n};\n\nfunction generateHttpClient(url, options) {}\n",
    "/* eslint-disable */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.flattenObject = exports.queryParameters = exports.fetchJson = undefined;\n\nvar _extends =\n  Object.assign ||\n  function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n\nexports.extractIDFromResourceSelfLink = extractIDFromResourceSelfLink;\n\nvar _reactAdmin = require(\"react-admin\");\n\nvar _HttpError = require(\"ra-core/lib/util/HttpError\");\n\nvar _HttpError2 = _interopRequireDefault(_HttpError);\n\nvar _queryString = require(\"query-string\");\n// fixed\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction extractIDFromResourceSelfLink(selfLink) {\n  return selfLink && selfLink.match(/[\\w\\-]+$/)[0];\n}\n\nfunction setSelfHrefAsID(resource) {\n  return _extends({}, resource, {\n    id: extractIDFromResourceSelfLink(resource[_constants.LINKS_KEY].self.href)\n  });\n}\n\nfunction setIDToResourcesList(resources) {\n  return resources.map(setSelfHrefAsID);\n}\n\nvar handlingResponse = function handlingResponse(_ref, resource, type) {\n  var status = _ref.status,\n    statusText = _ref.statusText,\n    headers = _ref.headers,\n    body = _ref.body;\n\n  var json = void 0;\n  try {\n    json = JSON.parse(body);\n  } catch (e) {\n    // not json, no big deal\n  }\n  if (status < 200 || status >= 300) {\n    return Promise.reject(\n      new _HttpError2.default(\n        (json && json.message) || statusText,\n        status,\n        json\n      )\n    );\n  }\n  switch (type) {\n    case _reactAdmin.GET_ONE:\n      return {\n        status: status,\n        headers: headers,\n        body: body,\n        json: setSelfHrefAsID(json)\n      };\n    case _reactAdmin.GET_LIST:\n    case _reactAdmin.GET_MANY_REFERENCE:\n      return {\n        status: status,\n        headers: headers,\n        body: body,\n        json: _extends(\n          {},\n          json,\n          _defineProperty(\n            {},\n            _constants.EMBEDDED_KEY,\n            _defineProperty(\n              {},\n              resource,\n              setIDToResourcesList(json[_constants.EMBEDDED_KEY][resource])\n            )\n          )\n        )\n      };\n    case _reactAdmin.GET_MANY:\n      return {\n        status: status,\n        headers: headers,\n        body: body,\n        json: setSelfHrefAsID(json)\n      };\n    default:\n      return { status: status, headers: headers, body: body, json: json };\n  }\n};\n\nvar fetchJson = (exports.fetchJson = function fetchJson(url) {\n  var options =\n    arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var resource = arguments[2];\n  var type = arguments[3];\n\n  var requestHeaders =\n    options.headers ||\n    new Headers({\n      Accept: \"application/json\"\n    });\n  if (\n    !requestHeaders.has(\"Content-Type\") &&\n    !(options && options.body && options.body instanceof FormData)\n  ) {\n    requestHeaders.set(\"Content-Type\", \"application/json\");\n  }\n  if (options.user && options.user.token) {\n    requestHeaders.set(\"Authorization\", options.user.token);\n  }\n\n  return fetch(url, _extends({}, options, { headers: requestHeaders }))\n    .then(function(response) {\n      var emptyStatusCodes = [204];\n      if (emptyStatusCodes.includes(response.status)) {\n        return {\n          status: response.status,\n          statusText: response.statusText,\n          headers: response.headers,\n          body: {}\n        };\n      }\n      return response.text().then(function(text) {\n        return {\n          status: response.status,\n          statusText: response.statusText,\n          headers: response.headers,\n          body: text\n        };\n      });\n    })\n    .then(function(response) {\n      return handlingResponse(response, resource, type);\n    });\n});\n\nvar queryParameters = (exports.queryParameters = _queryString.stringify);\n\nvar isValidObject = function isValidObject(value) {\n  if (!value) {\n    return false;\n  }\n\n  var isArray = Array.isArray(value);\n  var isBuffer = Buffer.isBuffer(value);\n  var isObject = Object.prototype.toString.call(value) === \"[object Object]\";\n  var hasKeys = !!Object.keys(value).length;\n\n  return !isArray && !isBuffer && isObject && hasKeys;\n};\n\nvar flattenObject = (exports.flattenObject = function flattenObject(value) {\n  var path =\n    arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (isValidObject(value)) {\n    return Object.assign.apply(\n      Object,\n      [{}].concat(\n        _toConsumableArray(\n          Object.keys(value).map(function(key) {\n            return flattenObject(value[key], path.concat([key]));\n          })\n        )\n      )\n    );\n  } else {\n    return path.length ? _defineProperty({}, path.join(\".\"), value) : value;\n  }\n});\n"
  ],
  "sourceRoot": ""
}